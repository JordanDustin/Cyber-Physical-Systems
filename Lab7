/*----------------------------------------------------------------------------*/
/*                                                                            */
/*    Module:       main.cpp                                                  */
/*    Author:       VEX                                                       */
/*    Created:      Tue Mar 16 2021                                           */
/*    Description:  Arm Display Position                                      */
/*                                                                            */
/*    This example will continuously display the current                      */
/*    position of the arm on the brain's screen                               */
/*                                                                            */
/*----------------------------------------------------------------------------*/


// ---- START VEXCODE CONFIGURED DEVICES ----
// Robot Configuration:
// [Name]               [Type]        [Port(s)]
// RoboticArm1          RoboticArm    1, 2, 3, 4, A, B, C, D
// EStop                bumper        E              
// Magnet5              electromagnet 5              
// ---- END VEXCODE CONFIGURED DEVICES ----


#include "vex.h"


using namespace vex;


int displayPositionLoop() {


 Brain.Screen.setFont(mono60);
  while (true) {
   Brain.Screen.clearScreen();


   // Display the X position on row 1
   Brain.Screen.setCursor(1, 1);
   Brain.Screen.print("X: %.3f", RoboticArm1.getAxisPosition(xaxis));


   // Display the Y position on row 2
   Brain.Screen.newLine();
   Brain.Screen.print("Y: %.3f", RoboticArm1.getAxisPosition(yaxis));


   // Display the Z position on row 3
   Brain.Screen.newLine();
   Brain.Screen.print("Z: %.3f", RoboticArm1.getAxisPosition(zaxis));


   wait(0.2, seconds);
 }
 return 0;
}


// This is the function we want to run when the emergency stop button
// is pressed. It will tell the arm to stop moving.
void onEStopPressed() {
 RoboticArm1.emergencyStop();
}


int main() {
 // Initializing Robot Configuration. DO NOT REMOVE!
 vexcodeInit();
  // Link the emergency stop button pressed event with the onEStopPressed function
 EStop.pressed(onEStopPressed);


 // Start task to continuously display the current arm position
 vex::task displayPositionTask(displayPositionLoop);


 // Set up the arm with the initial configuration values
 RoboticArm1.setMasteringValues(1843.0,2212,1884,451.0);
 RoboticArm1.setToolTipOffset(-0.7, 0.0, -2.0);
 Magnet5.setPower(100.0);
 //Magnet5_duration = 500;
  //RoboticArm1.moveToPositionJoint(8.1, -6.7, 0.4);
 return 0;


}


void onevent_Brain_screen_pressed_0() {
 if (Brain.Screen.xPosition() > 250.0) {
   if (Brain.Screen.yPosition() > 125.0) {
     // Blue Box Pressed
     RoboticArm1.moveToPositionJoint(6, 4, 5.0);
     Magnet5.setPower(0.0);


   }
   else {
     // Green Box Pressed
     RoboticArm1.moveToPositionJoint(6, 9, 5.0);
     Magnet5.setPower(0.0);
   }
 }
 else {
   if (Brain.Screen.yPosition() > 125.0) {
     // Red Box Pressed
     RoboticArm1.moveToPositionJoint(10, 4, 5.0);
     Magnet5.setPower(0.0);


    
   }
   else {
     // White Box Pressed
     RoboticArm1.moveToPositionJoint(8, -7, 5.0);
     wait(1.0, seconds);
     RoboticArm1.moveToPositionJoint(8, -7.0, 4);
     //wait(1.0, seconds);
     Magnet5.pickup(500);
   }
 }
}


// "when started" hat block
int whenStarted1() {
 Brain.Screen.setPenColor(white);
 Brain.Screen.setFillColor(white);
 Brain.Screen.drawRectangle(30, 10, 200, 100);
 Brain.Screen.setFillColor(red);
 Brain.Screen.drawRectangle(30, 125, 200, 100);
 Brain.Screen.setFillColor(green);
 Brain.Screen.drawRectangle(250, 10, 200, 100);
 Brain.Screen.setFillColor(blue);
 Brain.Screen.drawRectangle(250, 125, 200, 100);
 return 0;
}

